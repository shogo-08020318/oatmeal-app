<div class="flex justify-center items-center py-10">
	<div class="lg:w-4/5 md:w-1/2 w-11/12">
		<%= form_with model: @form, local: true, class: "bg-white p-5 lg:p-10 rounded-lg shadow-lg min-w-full" do |f| %>
			<h1 class="text-center text-2xl mb-6 text-gray-600 font-bold font-sans"><%= t('.title') %></h1>
      <%= render 'shared/error_messages', object: f.object %>
      <div>
      	<%= f.label :name, class: "text-gray-800 font-semibold block mt-3 text-md" %><p class="text-sm text-red-500">※必須</p>
			  <%= f.text_field :name, class: "w-full bg-gray-100 px-4 py-2 rounded-lg focus:outline-none" %>
      </div>
      <div>
      	<%= f.label :recipe, class: "text-gray-800 font-semibold block mt-3 text-md" %><p class="text-sm text-red-500">※必須</p>
			  <%= f.text_area :recipe, class: "w-full bg-gray-100 px-4 py-2 rounded-lg focus:outline-none" %>
      </div>
      <div>
      	<%= f.label :image, class: "text-gray-800 font-semibold block my-3 text-md" %>
			  <%= f.file_field :image, onchange: 'previewImage()', class: "w-full bg-gray-100 px-4 py-2 rounded-lg focus:outline-none" %>
        <%= image_tag @form.food.image_url, class: 'p-3 mt-3 border-2 border-orange-400 bg-yellow-50 rounded-lg', id: 'preview', size: "300x400" %>
      </div>
      <div>
      	<%= f.label :cooking_comment, class: "text-gray-800 font-semibold block my-3 text-md" %>
			  <%= f.text_area :cooking_comment, class: "w-full bg-gray-100 px-4 py-2 rounded-lg focus:outline-none" %>
      </div>
      <div>
      	<%= f.label :cooking_time, class: "text-gray-800 font-semibold block mt-3 text-md" %><p class="text-sm text-red-500">※必須</p>
			  <%= f.text_field :cooking_time, class: "w-full bg-gray-100 px-4 py-2 rounded-lg focus:outline-none" %>
      </div>
      <div>
      	<%= f.label :cooking_time_unit, class: "text-gray-800 font-semibold block mt-3 text-md" %><p class="text-sm text-red-500">※必須</p>
        <%= f.select :cooking_time_unit, Food.cooking_time_units.keys.map {|k| [I18n.t("enums.food.cooking_time_unit.#{k}"), k]}, { include_blank: "選択してください" },class: "w-full bg-gray-100 px-4 py-2 rounded-lg focus:outline-none" %>
      </div>
      <div>
      	<%= f.label :serving, class: "text-gray-800 font-semibold block mt-3 text-md" %><p class="text-sm text-red-500">※必須</p>
			  <%= f.text_field :serving, class: "w-full bg-gray-100 px-4 py-2 rounded-lg focus:outline-none" %>
      </div>
      <div>
      	<%= f.label 'タグ', class: "text-gray-800 font-semibold block my-3 text-md" %>
        <div class="flex flex-col lg:flex-row">
          <%= f.collection_check_boxes :food_tags, Tag.all, :id, :name, include_hidden: false, class: "bg-gray-100 px-4 py-2 rounded-lg focus:outline-none" do |b| %>
            <%= b.label(class: "w-1/2 lg:w-1/6 bg-yellow-100 border-2 rounded-md border-orange-500 text-orange-500 mr-1 pl-1 mb-4") { b.check_box + b.text } %>
          <% end %>
        </div>
      </div>
      <div>
        <%= f.label '材料', class: "text-gray-800 font-semibold block mt-3 text-md" %><p class="text-sm text-red-500">※必須</p>
        <div id='js-add-ingredient-form'>
          <% if @form.ingredients.present? %>
            <% @form.ingredients.each do |ingredient| %>
              <%= render 'ingredients_form', f: f, ingredient: ingredient %>
            <% end %>
          <% end %>
        </div>
        <div class='my-2 pt-2'>
          <span class='cursor-pointer text-white bg-gradient-to-r from-yellow-400 via-orange-400 to-orange-600 hover:bg-gradient-to-br focus:ring-4 focus:ring-pink-300 dark:focus:ring-pink-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2' onclick='addMediumForm(event)'>材料追加</span>
        </div>
      </div>
      <div class="text-center">
        <%= f.submit class: "cursor-pointer w-1/2 lg:w-1/4 mt-6 bg-orange-400 rounded-lg px-4 py-2 text-lg text-white tracking-wide font-semibold font-sans" %>
      </div>

      <script type="text/javascript">
        const addMediumForm = (e) => {
          const mediaForm = document.getElementById('js-add-ingredient-form')
          mediaForm.insertAdjacentHTML('afterend', "<%= j(render 'ingredients_form', {f: f, ingredient: Ingredient.new}) %>");
        }

        const removeMediumForm = (e) => {
          const mediumForm = e.currentTarget.closest('.js-remove-ingredient-form')
          mediumForm.remove();
        }
      </script>
    <% end %>
	</div>
</div>

<script>
function previewImage() {
    const target = this.event.target;
    console.log(target);
    const file = target.files[0];
    const reader  = new FileReader();
    reader.onloadend = function () {
        const preview = document.querySelector("#preview")
        if(preview) {
            preview.src = reader.result;
        }
    }
    if (file) {
        reader.readAsDataURL(file);
    }
}
</script>
