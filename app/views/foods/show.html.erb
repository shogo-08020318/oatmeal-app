<% content_for(:title, @food.name) %>

<div class="flex justify-center">
  <div class="py-6 pb-16 lg:pb-5 w-full px-2 lg:px-5">
    <!-- Image gallery -->
    <div class="bg-white pt-6 pb-3 lg:m-7">
      <h1 class="text-2xl lg:text-4xl text-gray-600 text-center py-3 font-bold"><%= @food.name %></h1>
      <div class="p-2 lg:pl-10 lg:pr-3 mt-6 mx-auto grid grid-cols-1 lg:grid-cols-2 gap-x-8">
        <div>
          <div>
            <%= image_tag @food.image_url(:show), class: "w-full shadow-lg rounded-xl relative z-1" %>
          </div>
          <div class="flex justify-between">
            <div class="p-7">
              <div class="grid grid-cols-3">
                <%= image_tag @food.user.avatar.url(:thumb), class: "w-12 h-12 mx-auto shadow-md rounded-full" %>
                <div class="col-span-2 pt-3">
                  <%= link_to @food.user.name, user_path(@food.user.uuid), class: "text-xl lg:text-2xl text-gray-500 hover:text-orange-400 font-semibold" %>
                </div>
              </div>
            </div>
            <div class="pl-5 text-lg lg:text-2xl pt-10">
              <% if current_user&.mine?(@food) %>
                <%= render 'update_destroy', food: @food  %>
              <% else %>
                <%= render 'favorites/favorite_button', food: @food  %>
              <% end %>
            </div>
          </div>
        </div>
        <div class="flex flex-wrap mt-5 lg:mt-0" id="tabs-id">
          <div class="w-full">
            <ul class="flex mb-0 list-none flex-wrap flex-row">
              <li class="-mb-px last:mr-0 flex-auto text-center">
                <a class="text-lg font-bold uppercase px-5 py-2 shadow-lg rounded block leading-normal text-white bg-orange-400" onclick="changeAtiveTab(event,'tab-profile')">
                  <%= t('.macro') %>
                </a>
              </li>
              <li class="-mb-px last:mr-0 flex-auto text-center">
                <a class="text-lg font-bold uppercase px-5 py-2 shadow-lg rounded block leading-normal text-orange-400 bg-white" onclick="changeAtiveTab(event,'tab-settings')">
                  <%= Nutrition.human_attribute_name(:calories) %>
                </a>
              </li>
            </ul>
            <div class="relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-lg rounded border-2 border-orange-400">
              <div class="flex-auto">
                <div class="tab-content tab-space pt-5">
                  <div class="block" id="tab-profile">
                    <% if @food.nutrition.decorate.nutrition_check %>
                      <div class="text-center my-20 lg:my-24 2xl:my-40 py-12 lg:py-24 2xl:py-24">
                        <p class="font-bold text-gray-600 text-lg lg:text-2xl px-4 lg:px-0"><%= t('.no_nutrition_data') %></p>
                      </div>
                    <% else %>
                      <p class="text-center text-lg font-medium pb-5"><%= @food.name %>のマクロ栄養素(g)<br>（１食当たり）</p>
                      <canvas class="" id="chartRadar" style="display: block; height: 900px; width: 1050px;"></canvas>
                    <% end %>
                  </div>
                  <div class="hidden" id="tab-settings">
                    <% if @food.nutrition.decorate.nutrition_check %>
                      <div class="text-center my-20 lg:my-40 py-12 lg:py-24">
                        <p class="font-bold text-gray-600 text-lg lg:text-2xl px-4 lg:px-0"><%= t('.no_nutrition_data') %></p>
                      </div>
                    <% else %>
                      <p class="text-center text-lg font-medium"><%= @food.name %>のカロリー(kcal)<br>（１食当たり）</p>
                      <canvas class="p-10" id="chartDoughnut" style="display: block; height: 900px; width: 1050px;"></canvas>
                    <% end %>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Product info -->
      <div class="mt-5 mx-5 pt-4 border-t-2 border-orange-200 text-gray-600">
        <div>
          <div class="grid grid-cols-1 lg:grid-cols-2">
            <div>
              <!--材料 -->
              <div class="p-3">
                <h1 class="text-xl lg:text-2xl font-bold underline"><%= Ingredient.model_name.human %>（<%= @food.serving %>人前）</h1>
                <div class="p-2">
                  <ul class="list-disc list-inside text-md lg:text-lg">
                    <% @food.ingredients.each do |ingredient| %>
                      <li><span class="font-semibold"><%= ingredient.ingredient_name %></span> : <%= ingredient.decorate.proper_quantity? %></li>
                    <% end %>
                  </ul>
                </div>
              </div>
              <!-- 調理時間 -->
              <div class="p-3">
                <h1 class="text-xl lg:text-2xl font-bold underline"><%= Food.human_attribute_name(:cooking_time) %></h1>
                <div class="p-2">
                  <%= @food.cooking_time %>
                </div>
              </div>
              <!-- コメント -->
              <div class="p-3">
                <h1 class="text-xl lg:text-2xl font-bold underline"><%= Food.human_attribute_name(:cooking_comment) %></h1>
                <div class="p-2">
                  <%= simple_format(@food.decorate.cooking_comment?) %>
                </div>
              </div>
            </div>
            <div>
              <!-- 作り方 -->
              <div class="p-3">
                <h1 class="text-xl lg:text-2xl font-bold underline"><%= Food.human_attribute_name(:recipe) %></h1>
                <div class="p-2">
                  <%= simple_format(@food.recipe) %>
                </div>
              </div>
            </div>
          </div>
          <!-- タグ -->
          <div class="p-3">
            <h1 class="text-xl lg:text-2xl font-bold underline"><%= Tag.model_name.human %></h1>
            <div class="flex justify-start pt-3">
              <% if @food.tags.present? %>
                <% @food.tags.each do |tag| %>
                  <%= link_to tag.name, foods_path(q: { food_tags: [tag.id] }), class: "inline-block bg-yellow-100 hover:bg-orange-400 rounded-full px-3 py-1 text-sm font-semibold text-orange-400 hover:text-yellow-100 mr-2 mb-2" %>
                <% end %>
              <% else %>
                <p class="pl-2"><%= t('.no_tag') %></p>
              <% end %>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="m-3 lg:m-10 py-7 border-t-2 border-orange-200">
      <div class="grid grid-cols-1 lg:grid-cols-2">
        <div class="lg:mx-5">
          <%= render 'comments/form', { food: @food, comment: @comment } %>
        </div>
        <div class="lg:mx-5">
          <div class="flex justify-center lg:justify-start mb-4">
            <h5 class="text-xl font-bold leading-none text-gray-600 dark:text-white lg:ml-5 pt-1 mt-5 lg:mt-0"><%= t('.comments') %></h5>
          </div>
          <div class="p-4 lg:mx-5 bg-white rounded-lg shadow-md lg:px-8 dark:bg-gray-800 min-h-full">
            <% if @comments.present? %>
              <%= render 'comments/comments', comments: @comments %>
            <% else %>
              <p class="text-gray-500"><%= t('.no_comment') %></p>
            <% end %>
          </div>
        </div>
      </div>
    </div>
    <div class="m-3 lg:m-10 pt-7 border-t-2 border-orange-200">
      <div class="text-center">
        <p class="text-gray-600 text-3xl">
          あなたにおすすめのレシピ
        </p>
      </div>
      <div class="">
        <div class="py-5 grid grid-cols-3 mx-48">
          <%= render partial: 'relevance_food', collection: @relevance_foods %>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Chart radar -->
<script>
  if (window.matchMedia( "(min-width: 1024px)" ).matches) {
    var fontSize = 20;
  } else if (window.matchMedia( "(min-width: 768px)" ).matches) {
    var fontSize = 15;
  } else {
    var fontSize = 10;
  }

  const dataRadar = {
    labels: [
      "炭水化物",
      "タンパク質",
      "脂質"
    ],
    datasets: [
      {
        data: [
          gon.nutrition[0],
          gon.nutrition[1],
          gon.nutrition[2]
        ],
        fill: true,
        backgroundColor: "rgba(255,204,0,0.2)",
        borderColor: "rgb(255,153,51)",
        pointBackgroundColor: "rgb(255,153,51)",
        pointBorderColor: "#fff",
        pointHoverBackgroundColor: "#fff",
        pointHoverBorderColor: "rgb(255,153,51)",
      }
    ],
  };

  const configRadarChart = {
    type: "radar",
    data: dataRadar,
    options: {
      scale: {
        ticks: {
          suggestedMin: 0,
          stepSize: 5,
          fontSize: fontSize,
          fontColor: '#000'
        },
        pointLabels: {
          fontSize: fontSize,
          fontColor: '#000'
        }
      },
      legend: {
        display: false
      }
    }
  };

  var chartBar = new Chart(
    document.getElementById("chartRadar"),
    configRadarChart
  );
</script>

<!-- Chart doughnut -->
<script>
  if (window.matchMedia( "(min-width: 768px)" ).matches) {
      var macrolabel = 25;
      var totallabel = 60;
      var calorielabel = 45;
    } else {
      var macrolabel = 15;
      var totallabel = 40;
      var calorielabel = 35;
    }

  const dataDoughnut = {
    labels: [
      "炭水化物",
      "タンパク質",
      "脂質"
      ],
    datasets: [
      {
        label: "My First Dataset",
        data: [
          gon.nutrition_calories[0],
          gon.nutrition_calories[1],
          gon.nutrition_calories[2]
          ],
        backgroundColor: [
          "rgb(255,0,51,0.8)",
          "rgb(255,102,51,0.8)",
          "rgb(255,204,51,0.8)",
        ],
        hoverOffset: 4,
        borderWidth: 0
      },
    ],
  };

  const configDoughnut = {
    type: "doughnut",
    data: dataDoughnut,
    options: {
      legend: {
        display: false
      },
      plugins: {
        labels: [
          {
            render: function (args) {
              return args.label + '\n' + args.value + '%';
            },
            fontSize: macrolabel,
            fontColor: '#fff',
          }
        ],
        doughnutlabel: {
          labels: [
            {
              text: '合計',
              font: {
                size: totallabel,
                tyle: 'italic',
                wieght: 'bold'
              }
            },
            {
              text: gon.nutrition_calories[3] + 'kcal',
              font: {
                size: calorielabel
              },
            color: 'red'
            }
          ]
        }
      }
    },
  };

  var chartBar = new Chart(
    document.getElementById("chartDoughnut"),
    configDoughnut
  );
</script>

<!-- tabs -->
<script type="text/javascript">
  function changeAtiveTab(event,tabID){
    let element = event.target;
    while(element.nodeName !== "A"){
      element = element.parentNode;
    }
    ulElement = element.parentNode.parentNode;
    aElements = ulElement.querySelectorAll("li > a");
    tabContents = document.getElementById("tabs-id").querySelectorAll(".tab-content > div");
    for(let i = 0 ; i < aElements.length; i++){
      aElements[i].classList.remove("text-white");
      aElements[i].classList.remove("bg-orange-400");
      aElements[i].classList.add("text-orange-400");
      aElements[i].classList.add("bg-white");
      tabContents[i].classList.add("hidden");
      tabContents[i].classList.remove("block");
    }
    element.classList.remove("text-orange-400");
    element.classList.remove("bg-white");
    element.classList.add("text-white");
    element.classList.add("bg-orange-400");
    document.getElementById(tabID).classList.remove("hidden");
    document.getElementById(tabID).classList.add("block");
  }
</script>

<!-- chartjs-plugin-labels -->
<script>
  /**
   * [chartjs-plugin-labels]{@link https://github.com/emn178/chartjs-plugin-labels}
   *
   * @version 1.1.0
   * @author Chen, Yi-Cyuan [emn178@gmail.com]
   * @copyright Chen, Yi-Cyuan 2017-2018
   * @license MIT
   */
  (function(){function f(){this.renderToDataset=this.renderToDataset.bind(this)}if("undefined"===typeof Chart)console.error("Can not find Chart object.");else{"function"!=typeof Object.assign&&(Object.assign=function(a,c){if(null==a)throw new TypeError("Cannot convert undefined or null to object");for(var b=Object(a),e=1;e<arguments.length;e++){var d=arguments[e];if(null!=d)for(var g in d)Object.prototype.hasOwnProperty.call(d,g)&&(b[g]=d[g])}return b});var k={};["pie","doughnut","polarArea","bar"].forEach(function(a){k[a]=
    !0});f.prototype.setup=function(a,c){this.chart=a;this.ctx=a.ctx;this.args={};this.barTotal={};var b=a.config.options;this.options=Object.assign({position:"default",precision:0,fontSize:b.defaultFontSize,fontColor:b.defaultFontColor,fontStyle:b.defaultFontStyle,fontFamily:b.defaultFontFamily,shadowOffsetX:3,shadowOffsetY:3,shadowColor:"rgba(0,0,0,0.3)",shadowBlur:6,images:[],outsidePadding:2,textMargin:2,overlap:!0},c);"bar"===a.config.type&&(this.options.position="default",this.options.arc=!1,this.options.overlap=
    !0)};f.prototype.render=function(){this.labelBounds=[];this.chart.data.datasets.forEach(this.renderToDataset)};f.prototype.renderToDataset=function(a,c){this.totalPercentage=0;this.total=null;var b=this.args[c];b.meta.data.forEach(function(c,d){this.renderToElement(a,b,c,d)}.bind(this))};f.prototype.renderToElement=function(a,c,b,e){if(this.shouldRenderToElement(c.meta,b)&&(this.percentage=null,c=this.getLabel(a,b,e))){var d=this.ctx;d.save();d.font=Chart.helpers.fontString(this.options.fontSize,
    this.options.fontStyle,this.options.fontFamily);var g=this.getRenderInfo(b,c);this.drawable(b,c,g)&&(d.beginPath(),d.fillStyle=this.getFontColor(a,b,e),this.renderLabel(c,g));d.restore()}};f.prototype.renderLabel=function(a,c){return this.options.arc?this.renderArcLabel(a,c):this.renderBaseLabel(a,c)};f.prototype.renderBaseLabel=function(a,c){var b=this.ctx;if("object"===typeof a)b.drawImage(a,c.x-a.width/2,c.y-a.height/2,a.width,a.height);else{b.save();b.textBaseline="top";b.textAlign="center";this.options.textShadow&&
    (b.shadowOffsetX=this.options.shadowOffsetX,b.shadowOffsetY=this.options.shadowOffsetY,b.shadowColor=this.options.shadowColor,b.shadowBlur=this.options.shadowBlur);for(var e=a.split("\n"),d=0;d<e.length;d++)b.fillText(e[d],c.x,c.y-this.options.fontSize/2*e.length+this.options.fontSize*d);b.restore()}};f.prototype.renderArcLabel=function(a,c){var b=this.ctx,e=c.radius,d=c.view;b.save();b.translate(d.x,d.y);if("string"===typeof a){b.rotate(c.startAngle);b.textBaseline="middle";b.textAlign="left";d=
    a.split("\n");var g=0,l=[],f=0;"border"===this.options.position&&(f=(d.length-1)*this.options.fontSize/2);for(var h=0;h<d.length;++h){var m=b.measureText(d[h]);m.width>g&&(g=m.width);l.push(m.width)}for(h=0;h<d.length;++h){var n=d[h],k=(d.length-1-h)*-this.options.fontSize+f;b.save();b.rotate((g-l[h])/2/e);for(var p=0;p<n.length;p++){var q=n.charAt(p);m=b.measureText(q);b.save();b.translate(0,-1*e);b.fillText(q,0,k);b.restore();b.rotate(m.width/e)}b.restore()}}else b.rotate((d.startAngle+Math.PI/
    2+c.endAngle)/2),b.translate(0,-1*e),this.renderLabel(a,{x:0,y:0});b.restore()};f.prototype.shouldRenderToElement=function(a,c){return!a.hidden&&!c.hidden&&(this.options.showZero||"polarArea"===this.chart.config.type?0!==c._view.outerRadius:0!==c._view.circumference)};f.prototype.getLabel=function(a,c,b){if("function"===typeof this.options.render)a=this.options.render({label:this.chart.config.data.labels[b],value:a.data[b],percentage:this.getPercentage(a,c,b),dataset:a,index:b});else switch(this.options.render){case "value":a=
    a.data[b];break;case "label":a=this.chart.config.data.labels[b];break;case "image":a=this.options.images[b]?this.loadImage(this.options.images[b]):"";break;default:a=this.getPercentage(a,c,b)+"%"}"object"===typeof a?a=this.loadImage(a):null!==a&&void 0!==a&&(a=a.toString());return a};f.prototype.getFontColor=function(a,c,b){var e=this.options.fontColor;"function"===typeof e?e=e({label:this.chart.config.data.labels[b],value:a.data[b],percentage:this.getPercentage(a,c,b),backgroundColor:a.backgroundColor[b],
    dataset:a,index:b}):"string"!==typeof e&&(e=e[b]||this.chart.config.options.defaultFontColor);return e};f.prototype.getPercentage=function(a,c,b){if(null!==this.percentage)return this.percentage;if("polarArea"===this.chart.config.type){if(null===this.total)for(c=this.total=0;c<a.data.length;++c)this.total+=a.data[c];a=a.data[b]/this.total*100}else if("bar"===this.chart.config.type){if(void 0===this.barTotal[b])for(c=this.barTotal[b]=0;c<this.chart.data.datasets.length;++c)this.barTotal[b]+=this.chart.data.datasets[c].data[b];
    a=a.data[b]/this.barTotal[b]*100}else a=c._view.circumference/this.chart.config.options.circumference*100;a=parseFloat(a.toFixed(this.options.precision));this.options.showActualPercentages||("bar"===this.chart.config.type&&(this.totalPercentage=this.barTotalPercentage[b]||0),this.totalPercentage+=a,100<this.totalPercentage&&(a-=this.totalPercentage-100,a=parseFloat(a.toFixed(this.options.precision))),"bar"===this.chart.config.type&&(this.barTotalPercentage[b]=this.totalPercentage));return this.percentage=
    a};f.prototype.getRenderInfo=function(a,c){return"bar"===this.chart.config.type?this.getBarRenderInfo(a,c):this.options.arc?this.getArcRenderInfo(a,c):this.getBaseRenderInfo(a,c)};f.prototype.getBaseRenderInfo=function(a,c){if("outside"===this.options.position||"border"===this.options.position){var b,e=a._view,d=e.startAngle+(e.endAngle-e.startAngle)/2,g=e.outerRadius/2;"border"===this.options.position?b=(e.outerRadius-g)/2+g:"outside"===this.options.position&&(b=e.outerRadius-g+g+this.options.textMargin);
    b={x:e.x+Math.cos(d)*b,y:e.y+Math.sin(d)*b};"outside"===this.options.position&&(d=this.options.textMargin+this.measureLabel(c).width/2,b.x+=b.x<e.x?-d:d);return b}return a.tooltipPosition()};f.prototype.getArcRenderInfo=function(a,c){var b=a._view;var e="outside"===this.options.position?b.outerRadius+this.options.fontSize+this.options.textMargin:"border"===this.options.position?(b.outerRadius/2+b.outerRadius)/2:(b.innerRadius+b.outerRadius)/2;var d=b.startAngle,g=b.endAngle,l=g-d;d+=Math.PI/2;g+=
    Math.PI/2;var f=this.measureLabel(c);d+=(g-(f.width/e+d))/2;return{radius:e,startAngle:d,endAngle:g,totalAngle:l,view:b}};f.prototype.getBarRenderInfo=function(a,c){var b=a.tooltipPosition();b.y-=this.measureLabel(c).height/2+this.options.textMargin;return b};f.prototype.drawable=function(a,c,b){if(this.options.overlap)return!0;if(this.options.arc)return b.endAngle-b.startAngle<=b.totalAngle;var e=this.measureLabel(c);c=b.x-e.width/2;var d=b.x+e.width/2,g=b.y-e.height/2;b=b.y+e.height/2;return"outside"===
    this.options.renderInfo?this.outsideInRange(c,d,g,b):a.inRange(c,g)&&a.inRange(c,b)&&a.inRange(d,g)&&a.inRange(d,b)};f.prototype.outsideInRange=function(a,c,b,e){for(var d=this.labelBounds,g=0;g<d.length;++g){for(var f=d[g],k=[[a,b],[a,e],[c,b],[c,e]],h=0;h<k.length;++h){var m=k[h][0],n=k[h][1];if(m>=f.left&&m<=f.right&&n>=f.top&&n<=f.bottom)return!1}k=[[f.left,f.top],[f.left,f.bottom],[f.right,f.top],[f.right,f.bottom]];for(h=0;h<k.length;++h)if(m=k[h][0],n=k[h][1],m>=a&&m<=c&&n>=b&&n<=e)return!1}d.push({left:a,
    right:c,top:b,bottom:e});return!0};f.prototype.measureLabel=function(a){if("object"===typeof a)return{width:a.width,height:a.height};var c=0;a=a.split("\n");for(var b=0;b<a.length;++b){var e=this.ctx.measureText(a[b]);e.width>c&&(c=e.width)}return{width:c,height:this.options.fontSize*a.length}};f.prototype.loadImage=function(a){var c=new Image;c.src=a.src;c.width=a.width;c.height=a.height;return c};Chart.plugins.register({id:"labels",beforeDatasetsUpdate:function(a,c){if(k[a.config.type]){Array.isArray(c)||
    (c=[c]);var b=c.length;a._labels&&b===a._labels.length||(a._labels=c.map(function(){return new f}));for(var e=!1,d=0,g=0;g<b;++g){var l=a._labels[g];l.setup(a,c[g]);"outside"===l.options.position&&(e=!0,l=1.5*l.options.fontSize+l.options.outsidePadding,l>d&&(d=l))}e&&(a.chartArea.top+=d,a.chartArea.bottom-=d)}},afterDatasetUpdate:function(a,c,b){k[a.config.type]&&a._labels.forEach(function(a){a.args[c.index]=c})},beforeDraw:function(a){k[a.config.type]&&a._labels.forEach(function(a){a.barTotalPercentage=
    {}})},afterDatasetsDraw:function(a){k[a.config.type]&&a._labels.forEach(function(a){a.render()})}})}})();
</script>

<!-- chartjs-plugin-doughnutlabel -->
<script>
  !function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(require("chart.js")):"function"==typeof define&&define.amd?define(["chart.js"],e):e(t.Chart)}(this,function(c){"use strict";var t={font:{family:void 0,lineHeight:1.2,size:void 0,style:void 0,weight:null}},l=(c=c&&c.hasOwnProperty("default")?c.default:c).helpers,p={parseFont:function(t){var e=c.defaults.global,n=l.valueOrDefault(t.size,e.defaultFontSize),i={family:l.valueOrDefault(t.family,e.defaultFontFamily),lineHeight:l.options.toLineHeight(t.lineHeight,n),size:n,style:l.valueOrDefault(t.style,e.defaultFontStyle),weight:l.valueOrDefault(t.weight,null),string:""};return i.string=p.toFontString(i),i},toFontString:function(t){return!t||l.isNullOrUndef(t.size)||l.isNullOrUndef(t.family)?null:(t.style?t.style+" ":"")+(t.weight?t.weight+" ":"")+t.size+"px "+t.family},textSize:function(t,e){var n,i=[].concat(e),l=i.length,o=t.font,a=0,r=0;for(n=0;n<l;++n)t.font=i[n].font.string,a=Math.max(t.measureText(i[n].text).width,a),r+=i[n].font.lineHeight;return t.font=o,{height:r,width:a}}},y=c.helpers;c.defaults.global.plugins.doughnutlabel=t,c.plugins.register({id:"doughnutlabel",beforeDatasetDraw:function(t,e,n){!function(n,i){if(i&&i.labels&&0<i.labels.length){var l=n.ctx,o=y.options.resolve,a=[];i.labels.forEach(function(t){var e={text:"function"==typeof t.text?t.text(n):t.text,font:p.parseFont(o([t.font,i.font,{}],l,0)),color:o([t.color,i.color,c.defaults.global.defaultFontColor],l,0)};a.push(e)});var t=p.textSize(l,a),e=Math.sqrt(Math.pow(t.width,2)+Math.pow(t.height,2)),r=2*n.innerRadius/e;r<1&&(a.forEach(function(t){t.font.size=Math.floor(t.font.size*r),t.font.lineHeight=void 0,t.font=p.parseFont(o([t.font,{}],l,0))}),t=p.textSize(l,a)),l.textAlign="center",l.textBaseline="middle";var f,u=(n.chartArea.left+n.chartArea.right)/2,s=(n.chartArea.top+n.chartArea.bottom)/2-t.height/2,h=a.length,g=0;for(f=0;f<h;++f){l.fillStyle=a[f].color,l.font=a[f].font.string;var d=s+a[f].font.lineHeight/2+g;g+=a[f].font.lineHeight,l.fillText(a[f].text,u,d)}}}(t,n)}})});
</script>
